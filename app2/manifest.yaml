apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  # deployment labels
  labels:
    purpose: ingress
    project: roboshop
    app: app2
spec:
  replicas: 2
  # These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels:
      purpose: ingress
      project: roboshop
      app: app2
  # This is pod definition
  template:
    metadata:
      labels:
        purpose: ingress
        project: roboshop
        app: app2
    spec:
      containers:
      - name: app2
        image: satishbandi33/app2:v1
---
apiVersion: v1
kind: Service
metadata:
  name: app2
  labels:
    purpose: ingress
    project: roboshop
    app: app2
spec:
  selector:
    purpose: ingress
    project: roboshop
    app: app2
  ports:
    - protocol: TCP
      port: 80 # service port
      targetPort: 80 # container port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app2
  annotations:
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:838237641372:certificate/02f7de79-b4f5-4456-bd49-8ca81839605d
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: roboshop
spec:
  ingressClassName: alb
  rules:
  - host: "app2.satish84s.site"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: app2
            port:
              number: 80 # app2 service port